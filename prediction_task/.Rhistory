label_alpha = TRUE)
customer_summary_df
customer_summary_df[,1] <- customer_summary_df$state
customer_summary_df[,2] <- customer_summary_df$age
customer_summary_df[,3] <- customer_summary_df$avg_purch
customer_summary_df[,4] <- customer_summary_df$Salary
head(customer_summary_df)
customer_summary_df <- data.frame(customer_summary)
customer_summary_df <- customer_summary_df[, -1]
customer_summary_df$state <- as.factor(customer_summary_df$state)
customer_summary_df
customer_prediction_df = NULL
customer_prediction_df[,1] <- customer_summary_df$state
customer_prediction_df = as.matrix(NA, nrow = 100, ncol = 4)
customer_prediction_df[,1] <- customer_summary_df$state
customer_prediction_df[,2] <- customer_summary_df$age
customer_prediction_df[,3] <- customer_summary_df$avg_purch
customer_prediction_df[,4] <- customer_summary_df$Salary
customer_prediction_df = as.matrix(NA, nrow = 99, ncol = 4)
customer_prediction_df[,1] <- customer_summary_df$state
customer_summary_df$state
length(customer_summary_df$state)
customer_prediction_df = matrix(nrow = 99, ncol = 4)
customer_prediction_df[,1] <- customer_summary_df$state
customer_prediction_df[,2] <- customer_summary_df$age
customer_prediction_df[,3] <- customer_summary_df$avg_purch
customer_prediction_df[,4] <- customer_summary_df$Salary
customer_summary_df$avg_purch
customer_prediction_df = matrix(nrow = 99, ncol = 4)
customer_prediction_df[,1] <- customer_summary_df$state
customer_prediction_df[,2] <- customer_summary_df$age
customer_prediction_df[,3] <- customer_summary_df$Purchase_Summary
customer_prediction_df[,4] <- customer_summary_df$Salary
customer_prediction_df
colnames(customer_prediction_df)[1] = "State"
colnames(customer_prediction_df)[2] = "Age"
colnames(customer_prediction_df)[3] = "Avg_Purch"
colnames(customer_prediction_df)[4] = "Ann_Salary"
customer_summary_df <- data.frame(customer_summary)
customer_summary_df <- customer_summary_df[, -1]
customer_summary_df$state <- as.factor(customer_summary_df$state)
customer_prediction_df = matrix(nrow = 99, ncol = 4)
customer_prediction_df[,1] <- customer_summary_df$state
customer_prediction_df[,2] <- customer_summary_df$age
customer_prediction_df[,3] <- customer_summary_df$Purchase_Summary
customer_prediction_df[,4] <- customer_summary_df$Salary
colnames(customer_prediction_df)[1] = "State"
customer_prediction_df
customer_prediction_df <- data.frame(customer_prediction_df)
colnames(customer_prediction_df)[1] = "State"
colnames(customer_prediction_df)[2] = "Age"
colnames(customer_prediction_df)[3] = "Avg_Purch"
colnames(customer_prediction_df)[4] = "Ann_Salary"
customer_prediction_df
ggcorr(customer_prediction_df,
label = TRUE,
label_alpha = TRUE)
str(customer_prediction_df)
customer_summary_df <- data.frame(customer_summary)
customer_summary_df <- customer_summary_df[, -1]
str(customer_summary_df)
customer_summary_df$state <- as.factor(customer_summary_df$state)
str(customer_summary_df)
customer_prediction_df = NULL
customer_prediction_df$State <- customer_summary_df$state
customer_prediction_df$Age <- customer_summary_df$age
customer_prediction_df$Avg_Purch <- customer_summary_df$Purchase_Summary
customer_prediction_df$Ann_Salary <- customer_summary_df$Salary
customer_prediction_df
customer_prediction_df <- data.frame(customer_prediction_df)
customer_prediction_df
ggcorr(customer_prediction_df,
label = TRUE,
label_alpha = TRUE)
ggcorr(customer_prediction_df,
label = TRUE,
label_alpha = TRUE) + ggtitle("Correlation Analysis: ANZ Transcaction Database")
fit <- lm(Ann_Salary ~ State + Age + Avg_Purch, data=customer_prediction_df)
fit
summary(fit)
fit <- lm(Ann_Salary ~ Age + Avg_Purch, data=customer_prediction_df)
fit
summary(fit)
head(df_anz)
fit
fit <- lm(Ann_Salary ~ Age + Avg_Purch, data=customer_prediction_df)
plot(Ann_Salary ~ Age + Avg_Purch, data = customer_prediction_df)
fit
library(GGally)
library(ggplot2)
library(dplyr)
library(ggmap)
library(GGally)
df_anz <- read.csv("ANZdataset.csv", header = TRUE, na.strings=c("","NA"))
df_anz$date <- as.Date(df_anz$date,format = "%d/%m/%Y")
annual_salary_summary <- df_anz %>% group_by(customer_id, age,long_lat,gender) %>% filter(txn_description == "PAY/SALARY") %>%
summarize(Salary= round(mean(amount)*12))
annual_salary_summary
boxplot(annual_salary_summary$Salary, horizontal = TRUE, staplewex = 1,
main= "Customer Mean Salary Distribution: ANZ Customer Transactions Database",  xlab = "Annual Salary")
text(x=fivenum(annual_salary_summary$Salary),labels = fivenum(annual_salary_summary$Salary), y=1.25)
boxplot(annual_salary_summary$Salary)$out
min(boxplot(annual_salary_summary$Salary)$out)
annual_salary_summary
annual_salary_summary
annual_salary_summary_withoutOutliers <- annual_salary_summary[annual_salary_summary$Salary < 72000,]
annual_salary_summary_withoutOutliers
annual_salary_summary[annual_salary_summary$Salary > 72000,]
annual_purchase_summary <- df_anz %>% group_by(customer_id) %>% filter(!(txn_description %in% c('PAY/SALARY',"INTER BANK", "PHONE BANK","PAYMEN
T"))) %>%summarize(Purchase= round(mean(amount)*12))
annual_purchase_summary
annual_purchase_summary_salary_without_outliers <-  annual_purchase_summary[
annual_purchase_summary$customer_id != "CUS-1816693151" | annual_purchase_summary$customer_id != "CUS-2178051368"
|annual_purchase_summary$customer_id != "CUS-51506836", ]
annual_purchase_summary_salary_without_outliers
annual_purchase_summary_salary_without_outliers <-  annual_purchase_summary[
!(annual_purchase_summary$customer_id == "CUS-1816693151" | annual_purchase_summary$customer_id == "CUS-2178051368"
|annual_purchase_summary$customer_id == "CUS-51506836"), ]
annual_purchase_summary_salary_without_outliers
customer_summary <- cbind(annual_salary_summary,Purchase_Summary=annual_purchase_summary$Purchase)
customer_summary_withoutoutliers <- cbind(annual_salary_summary_withoutOutliers,
Purchase_Summary=annual_purchase_summary_salary_without_outliers$Purchase)
customer_summary
customer_summary_withoutoutliers
customer_summary$long_lat
customer_summary_withoutoutliers$long_lat
customer_summary_withoutoutliers
unique(customer_summary_withoutoutliers$long_lat)
length(customer_summary_withoutoutliers$long_lat)
customer_summary_withoutoutliers$long_lat
customer_summary_withoutoutliers$long_lat[20]
customer_summary
write.table(customer_summary, "cust-sumaary.txt", sep = ",", row,row.names = FALSE, col.names = FALSE)
customer_summary
customer_summary <- data.frame(customer_summary)
write.table(customer_summary, "cust-sum.txt", sep = ",", row,row.names = FALSE, col.names = FALSE)
customer_summary
customer_summary <- customer_summary[-20,]
customer_summary_withoutoutliers <- customer_summary_withoutoutliers[-20,]
customer_summary_withoutoutliers <- data.frame(customer_summary_withoutoutliers)
write.table(customer_summary, "cust-sum.txt", sep = ",",row.names = FALSE, col.names = FALSE)
write.table(customer_summary_withoutoutliers, "cust-sum-without-out.txt", sep = ",",row.names = FALSE, col.names = FALSE)
write.table(customer_summary, "cust-sum.txt", sep = ",",row.names = FALSE, col.names = TRUE)
write.table(customer_summary_withoutoutliers, "cust-sum-without-out.txt", sep = ",",row.names = FALSE, col.names = TRUE)
df_locations <- unique(customer_summary$long_lat)
lon_df = NULL
lat_df = NULL
for (k in 1: length(df_locations)){
df_loc <- strsplit(as.character(df_locations[k]),"\\s+")[[1]]
lon_df[k] <- as.numeric(df_loc[1])
lat_df[k] <- as.numeric(df_loc[2])
}
state_df = NULL
for(i in 1:99){
print(i)
location <- revgeocode(c(lon_df[i], lat_df[i]))
states <- c("VIC", "NSW", "QLD", "NT", "JBT", "SA","TAS","WA", "ACT")
state_match <- stri_extract_all_regex(location, states)
state<- unlist(state_match[!(is.na(state_match))])
state_df[i] <-  state
}
customer_summary$state <- state_df
customer_summary <- customer_summary[, -3]
customer_summary_df <- data.frame(customer_summary)
customer_summary_df <- customer_summary_df[, -1]
customer_summary_df$state <- as.factor(customer_summary_df$state)
customer_prediction_df = NULL
customer_prediction_df$State <- customer_summary_df$state
customer_prediction_df$Age <- customer_summary_df$age
customer_prediction_df$Avg_Purch <- customer_summary_df$Purchase_Summary
customer_prediction_df$Ann_Salary <- customer_summary_df$Salary
customer_prediction_df <- data.frame(customer_prediction_df)
customer_prediction_df
customer_summary
customer_summary_df$state <- as.factor(customer_summary_df$state)
customer_prediction_df = NULL
customer_prediction_df$State <- customer_summary_df$state
customer_prediction_df$Gender <-  customer_summary_df$gender
customer_prediction_df$Age <- customer_summary_df$age
customer_prediction_df$Avg_Purch <- customer_summary_df$Purchase_Summary
customer_prediction_df$Ann_Salary <- customer_summary_df$Salary
customer_prediction_df <- data.frame(customer_prediction_df)
customer_prediction_df
df_locations <- unique(customer_summary_withoutoutliers$long_lat)
length(df_locations)
lon_df = NULL
lat_df = NULL
for (k in 1: length(df_locations)){
df_loc <- strsplit(as.character(df_locations[k]),"\\s+")[[1]]
lon_df[k] <- as.numeric(df_loc[1])
lat_df[k] <- as.numeric(df_loc[2])
}
state_df = NULL
for(i in 1:96){
print(i)
location <- revgeocode(c(lon_df[i], lat_df[i]))
states <- c("VIC", "NSW", "QLD", "NT", "JBT", "SA","TAS","WA", "ACT")
state_match <- stri_extract_all_regex(location, states)
state<- unlist(state_match[!(is.na(state_match))])
state_df[i] <-  state
}
View(customer_summary_withoutoutliers)
customer_summary_withoutoutliers$state <- state_df
customer_summary_withoutoutliers <- customer_summary_withoutoutliers[, -3]
customer_summary_withoutoutliers
customer_summary_withoutoutliers_df <- data.frame(customer_summary_withoutoutliers)
customer_summary_withoutoutliers_df <- customer_summary_withoutoutliers[, -1]
customer_summary_withoutoutliers <- as.factor(customer_summary_withoutoutliers$state)
customer_prediction_df_withoutoutliers = NULL
customer_prediction_df_withoutoutliers$State <- customer_summary_withoutoutliers$state
customer_prediction_df_withoutoutliers$Gender <-  customer_summary_withoutoutliers$gender
customer_prediction_df_withoutoutliers$Age <- customer_summary_withoutoutliers$age
customer_prediction_df_withoutoutliers$Avg_Purch <- customer_summary_withoutoutliers$Purchase_Summary
customer_prediction_df_withoutoutliers$Ann_Salary <- customer_summary_withoutoutliers$Salary
customer_summary_withoutoutliers
customer_summary_withoutoutliers <- data.frame(customer_summary_withoutoutliers)
customer_summary_withoutoutliers
df_anz <- read.csv("ANZdataset.csv", header = TRUE, na.strings=c("","NA"))
df_anz$date <- as.Date(df_anz$date,format = "%d/%m/%Y")
annual_salary_summary <- df_anz %>% group_by(customer_id, age,long_lat,gender) %>% filter(txn_description == "PAY/SALARY") %>%
summarize(Salary= round(mean(amount)*12))
annual_salary_summary_withoutOutliers <- annual_salary_summary[annual_salary_summary$Salary < 72000,]
annual_purchase_summary <- df_anz %>% group_by(customer_id) %>% filter(!(txn_description %in% c('PAY/SALARY',"INTER BANK", "PHONE BANK","PAYMEN
T"))) %>%summarize(Purchase= round(mean(amount)*12))
annual_purchase_summary_salary_without_outliers <-  annual_purchase_summary[
!(annual_purchase_summary$customer_id == "CUS-1816693151" | annual_purchase_summary$customer_id == "CUS-2178051368"
|annual_purchase_summary$customer_id == "CUS-51506836"), ]
customer_summary <- cbind(annual_salary_summary,Purchase_Summary=annual_purchase_summary$Purchase)
customer_summary_withoutoutliers <- cbind(annual_salary_summary_withoutOutliers,
Purchase_Summary=annual_purchase_summary_salary_without_outliers$Purchase)
customer_summary <- customer_summary[-20,]
customer_summary_withoutoutliers <- customer_summary_withoutoutliers[-20,]
customer_summary <- data.frame(customer_summary)
customer_summary_withoutoutliers <- data.frame(customer_summary_withoutoutliers)
register_google(key = "AIzaSyAIm9M4DpY5Ryp98aL4eHJRGlgYoEzey1g")
df_locations <- unique(customer_summary$long_lat)
lon_df = NULL
lat_df = NULL
for (k in 1: length(df_locations)){
df_loc <- strsplit(as.character(df_locations[k]),"\\s+")[[1]]
lon_df[k] <- as.numeric(df_loc[1])
lat_df[k] <- as.numeric(df_loc[2])
}
state_df = NULL
for(i in 1:99){
print(i)
location <- revgeocode(c(lon_df[i], lat_df[i]))
states <- c("VIC", "NSW", "QLD", "NT", "JBT", "SA","TAS","WA", "ACT")
state_match <- stri_extract_all_regex(location, states)
state<- unlist(state_match[!(is.na(state_match))])
state_df[i] <-  state
}
customer_summary$state <- state_df
customer_summary <- customer_summary[, -3]
customer_summary_df <- data.frame(customer_summary)
customer_summary_df <- customer_summary_df[, -1]
customer_summary_df$state <- as.factor(customer_summary_df$state)
customer_prediction_df = NULL
customer_prediction_df$State <- customer_summary_df$state
customer_prediction_df$Gender <-  customer_summary_df$gender
customer_prediction_df$Age <- customer_summary_df$age
customer_prediction_df$Avg_Purch <- customer_summary_df$Purchase_Summary
customer_prediction_df$Ann_Salary <- customer_summary_df$Salary
customer_prediction_df <- data.frame(customer_prediction_df)
write.table(customer_prediction_df, "customer_prediction_df", sep = ",",row.names = FALSE, col.names = TRUE)
write.table(customer_prediction_df, "customer_prediction.txt", sep = ",",row.names = FALSE, col.names = TRUE)
df_locations <- unique(customer_summary_withoutoutliers$long_lat)
lon_df = NULL
lat_df = NULL
for (k in 1: length(df_locations)){
df_loc <- strsplit(as.character(df_locations[k]),"\\s+")[[1]]
lon_df[k] <- as.numeric(df_loc[1])
lat_df[k] <- as.numeric(df_loc[2])
}
state_df = NULL
for(i in 1:96){
print(i)
location <- revgeocode(c(lon_df[i], lat_df[i]))
states <- c("VIC", "NSW", "QLD", "NT", "JBT", "SA","TAS","WA", "ACT")
state_match <- stri_extract_all_regex(location, states)
state<- unlist(state_match[!(is.na(state_match))])
state_df[i] <-  state
}
customer_summary_withoutoutliers$state <- state_df
customer_summary_withoutoutliers <- customer_summary_withoutoutliers[, -3]
customer_summary_withoutoutliers_df <- data.frame(customer_summary_withoutoutliers)
customer_summary_withoutoutliers_df <- customer_summary_withoutoutliers[, -1]
customer_summary_withoutoutliers <- as.factor(customer_summary_withoutoutliers$state)
customer_summary_withoutoutliers
df_anz <- read.csv("ANZdataset.csv", header = TRUE, na.strings=c("","NA"))
df_anz$date <- as.Date(df_anz$date,format = "%d/%m/%Y")
annual_salary_summary <- df_anz %>% group_by(customer_id, age,long_lat,gender) %>% filter(txn_description == "PAY/SALARY") %>%
summarize(Salary= round(mean(amount)*12))
annual_salary_summary_withoutOutliers <- annual_salary_summary[annual_salary_summary$Salary < 72000,]
annual_purchase_summary_salary_without_outliers <-  annual_purchase_summary[
!(annual_purchase_summary$customer_id == "CUS-1816693151" | annual_purchase_summary$customer_id == "CUS-2178051368"
|annual_purchase_summary$customer_id == "CUS-51506836"), ]
annual_purchase_summary <- df_anz %>% group_by(customer_id) %>% filter(!(txn_description %in% c('PAY/SALARY',"INTER BANK", "PHONE BANK","PAYMEN
T"))) %>%summarize(Purchase= round(mean(amount)*12))
annual_purchase_summary_salary_without_outliers <-  annual_purchase_summary[
!(annual_purchase_summary$customer_id == "CUS-1816693151" | annual_purchase_summary$customer_id == "CUS-2178051368"
|annual_purchase_summary$customer_id == "CUS-51506836"), ]
customer_summary_withoutoutliers <- cbind(annual_salary_summary_withoutOutliers,
Purchase_Summary=annual_purchase_summary_salary_without_outliers$Purchase)
customer_summary_withoutoutliers <- customer_summary_withoutoutliers[-20,]
customer_summary_withoutoutliers <- data.frame(customer_summary_withoutoutliers)
customer_summary_withoutoutliers
df_locations <- unique(customer_summary_withoutoutliers$long_lat)
lon_df = NULL
lat_df = NULL
for (k in 1: length(df_locations)){
df_loc <- strsplit(as.character(df_locations[k]),"\\s+")[[1]]
lon_df[k] <- as.numeric(df_loc[1])
lat_df[k] <- as.numeric(df_loc[2])
}
state_df = NULL
for(i in 1:96){
print(i)
location <- revgeocode(c(lon_df[i], lat_df[i]))
states <- c("VIC", "NSW", "QLD", "NT", "JBT", "SA","TAS","WA", "ACT")
state_match <- stri_extract_all_regex(location, states)
state<- unlist(state_match[!(is.na(state_match))])
state_df[i] <-  state
}
customer_summary_withoutoutliers
state_df
customer_summary_withoutoutliers$state <- state_df
customer_summary_withoutoutliers
customer_summary_withoutoutliers <- customer_summary_withoutoutliers[, -3]
customer_summary_withoutoutliers
customer_summary_withoutoutliers_df <- customer_summary_withoutoutliers[, -1]
customer_summary_withoutoutliers_df
customer_summary_withoutoutliers_df <- as.factor(customer_summary_withoutoutliers_df$state)
customer_summary_withoutoutliers_df
customer_summary_withoutoutliers
customer_summary_withoutoutliers_df <- customer_summary_withoutoutliers[, -1]
customer_summary_withoutoutliers_df$state <- as.factor(customer_summary_withoutoutliers_df$state)
customer_summary_withoutoutliers
customer_summary_withoutoutliers
customer_summary_withoutoutliers_df <- customer_summary_withoutoutliers[, -1]
customer_summary_withoutoutliers_df
customer_summary_withoutoutliers_df <- customer_summary_withoutoutliers[, -1]
customer_summary_withoutoutliers_df
customer_summary_withoutoutliers_df$state <- as.factor(customer_summary_withoutoutliers_df$state)
customer_summary_withoutoutliers_df
customer_prediction_df_withoutoutliers = NULL
customer_prediction_df_withoutoutliers$State <- customer_summary_withoutoutliers_df$state
customer_prediction_df_withoutoutliers$Gender <-  customer_summary_withoutoutliers_df$gender
customer_prediction_df_withoutoutliers$Age <- customer_summary_withoutoutliers_df$age
customer_prediction_df_withoutoutliers$Avg_Purch <- customer_summary_withoutoutliers_df$Purchase_Summary
customer_prediction_df_withoutoutliers$Ann_Salary <- customer_summary_withoutoutliers_df$Salary
customer_prediction_df_withoutoutliers <- data.frame(customer_prediction_df_withoutoutliers)
customer_prediction_df_withoutoutliers
write.table(customer_prediction_df_withoutoutliers, "cust-sum-without-out.txt", sep = ",",row.names = FALSE, col.names = TRUE)
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
customer_correlation
customer_correlation_without
head(customer_correlation_without)
head(customer_correlation)
ggcorr(customer_correlation,
label = TRUE,
label_alpha = TRUE) + ggtitle("Correlation Analysis: ANZ Transcaction Database")
ggcorr(customer_correlation_without,
label = TRUE,
label_alpha = TRUE) + ggtitle("Correlation Analysis (Without Outliers): ANZ Transcaction Database")
library(corrplot)
install.packages("corrplot")
library(corrplot)
pairs(customer_correlation, col=customer_correlation$Ann_Salary)
customer_correlation
pairs(customer_correlation, col=customer_correlation$Ann_Salary)
customer_correlation <- customer_correlation[,c(-1,-2)]
customer_correlation_without <- customer_correlation_without[,c(-1,-2)]
customer_correlation
pairs(customer_correlation, col=customer_correlation$Ann_Salary)
pairs(customer_correlation_without, col=customer_correlation$Ann_Salary)
cor(customer_correlation$Ann_Salary, customer_correlation$Age,  method = "pearson")
cor(customer_correlation_without$Ann_Salary, customer_correlation_without$Age,  method = "pearson")
cor(customer_correlation_without$Ann_Salary, customer_correlation_without$Avg_Purch,  method = "pearson")
cor(customer_correlation$Ann_Salary, customer_correlation$Avg_Purch,  method = "pearson")
customer_correlation
customer_correlation_without
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
customer_correlation
customer_correlation
str(customer_correlation)
salary_model <- lm(Ann_Salary ~ Age + Avg_Purch + State + Gender, customer_correlation)
salary_model
summary(salary_model)
salary_model <- lm(Ann_Salary ~ Age + Avg_Purch, customer_correlation)
summary(salary_model)
salary_train <- customer_correlation[1:70, ]
customer_correlation
salary_train <- customer_correlation[1:70, ]
salary_test <- customer_correlation[71:99, ]
salary_test
salary_train_model <- lm(Ann_Salary ~ Age + Avg_Purch, salary_train)
salary_test
?predict
head(salary_test)
salary_test[, c(-1, -2)]
salary_train_predict <- predict(salary_train_model, salary_test[, c(-1, -2)])
salary_train_predict
salary_train_predict <- predict(salary_train_model, salary_test)
salary_train_predict
salary_train_predict
as.numeric(salary_train_predict)
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
# Calculate RMSE, assign it to rmse and print it
rmse <- sqrt(mean(res ^ 2))
print(rmse)
salary_test$Ann_Salary
res <- salary_test$Ann_Salary - salary_train_predict
res
mean(abs(res))
sqrt(mean(abs(res)))
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
rmse <- sqrt(mean(res ^ 2))
print(rmse)
res
salary_train_predict
salary_train_model
summary(salary_train_model)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
salary_train <- customer_correlation_without[1:70, ]
salary_test <- customer_correlation_without[71:96, ]
salary_train_predict <- predict(salary_train_model, salary_test[, c(-1, -2)])
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
salary_train <- customer_correlation[1:70, ]
salary_test <- customer_correlation[71:99, ]
salary_model <- lm(Ann_Salary ~ Age + Avg_Purch, salary_train)
salary_train_predict <- predict(salary_model, salary_test[, c(-1, -2)])
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
# Calculate RMSE, assign it to rmse and print it
rmse <- sqrt(mean(res ^ 2))
print(rmse)
summary(salary_model)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
salary_train <- customer_correlation_without[1:70, ]
salary_test <- customer_correlation_without[71:96, ]
salary_model <- lm(Ann_Salary ~ Age + Avg_Purch, salary_train)
salary_train_predict <- predict(salary_train_model, salary_test[, c(-1, -2)])
salary_train_predict <- predict(salary_model, salary_test[, c(-1, -2)])
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
# Calculate RMSE, assign it to rmse and print it
rmse <- sqrt(mean(res ^ 2))
print(rmse)
summary(salary_model)
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
customer_correlation
customer_correlation
tree <- rpart(Ann_Salary ~ ., data = customer_correlation)
install.packages("rpart")
library(rpart)
prediction_tree <- rpart(Ann_Salary ~ ., data = customer_correlation)
prediction_tree
bestcp <- prediction_tree$cptable[which.min(prediction_tree$cptable[,"xerror"]),"CP"]
tree.pruned <- prune(tree, cp = bestcp)
tree.pruned <- prune(prediction_tree, cp = bestcp)
tree.pruned
prediction_tree
plot(tree.pruned)
plot(prediction_tree)
plot(prediction_tree)
text(prediction_tree, cex = 0.8, use.n = TRUE, xpd = TRUE)
prp(prediction_tree, faclen = 0, cex = 0.8, extra = 1)
install.packages("rpart.plot")
library(rpart.plot)
prp(prediction_tree, faclen = 0, cex = 0.8, extra = 1)
plot(prediction_tree)
text(prediction_tree, cex = 0.8, use.n = TRUE, xpd = TRUE)
customer_correlation
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
salary_train <- customer_correlation[1:70, ]
salary_test <- customer_correlation[71:99, ]
salary_test
prediction_tree <- rpart(Ann_Salary ~ ., data = salary_train)
salary_train_predict <- predict(prediction_tree, salary_test[, -5])
salary_train_predict
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
rmse <- sqrt(mean(res ^ 2))
print(rmse)
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
salary_train <- customer_correlation[1:70, ]
salary_test <- customer_correlation[71:99, ]
prediction_tree <- rpart(Ann_Salary ~ ., data = salary_train)
salary_train_predict <- predict(prediction_tree, salary_test[, -5])
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
# Calculate RMSE, assign it to rmse and print it
rmse <- sqrt(mean(res ^ 2))
print(rmse)
prp(prediction_tree, faclen = 0, cex = 0.8, extra = 1)
customer_correlation <- read.csv("cust-sum.txt", header = TRUE)
customer_correlation_without <- read.csv("cust-sum-without-out.txt", header = TRUE)
salary_train <- customer_correlation[1:70, ]
salary_test <- customer_correlation[71:96, ]
salary_train <- customer_correlation_without[1:70, ]
salary_test <- customer_correlation_without[71:96, ]
prediction_tree <- rpart(Ann_Salary ~ ., data = salary_train)
salary_train_predict <- predict(prediction_tree, salary_test[, -5])
res <- salary_test$Ann_Salary - as.numeric(salary_train_predict)
rmse <- sqrt(mean(res ^ 2))
print(rmse)
prp(prediction_tree, faclen = 0, cex = 0.8, extra = 1)
